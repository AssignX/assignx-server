### POST 건물 추가
POST {{host}}/api/admin/building
Content-Type:application/json

{
  "buildingNumber": 999,
  "buildingName": "테스트 건물",
  "rooms": [
    {
      "roomNumber": "100",
      "roomCapacity": 10
    }
  ]
}

> {%
    client.test("Response status is 200", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
    client.global.set("created_building_id", response.body.buildingId)
    client.log(response.body.rooms[0].roomId)
    client.global.set("created_roomId", response.body.rooms[0].roomId)
%}

### GET 건물 목록 조회
GET {{host}}/api/building

> {%
    client.test("Response status is 200", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### GET 건물 상세 조회 - IT대학5호관(IT융복합관)
GET {{host}}/api/building/{{created_building_id}}

> {%
    client.test("Response status is 200", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### PUT 건물 수정
PUT {{host}}/api/admin/building
Content-Type:application/json

{
  "buildingId": {{created_building_id}},
  "buildingNumber": 999,
  "buildingName": "수정된 테스트 건물",
  "rooms": [
    {
      "roomId": {{created_roomId}},
      "roomNumber": "100",
      "roomCapacity": 10
    }
  ]
}

> {%
    client.test("Response status is 200", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.buildingName === "수정된 테스트 건물");
    });
%}

### GET 수정된 건물 상세 조회 - IT대학5호관(IT융복합관)
GET {{host}}/api/building/{{created_building_id}}

> {%
    client.test("Response status is 200", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### DELETE 건물 삭제
DELETE {{host}}/api/admin/building/{{created_building_id}}

> {%
    client.test("Response status is 200", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}